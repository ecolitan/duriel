'''
    duriel: Backup Xen Guest LVM Images.
    Copyright (C) <2012-2013>  <Aaron Cossey (aaron dot cossey at gmail dot com)>

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.
'''

import subprocess
from subprocess import Popen
import os

class Rsync():
    def __init__(self, args=[]):
        """
        Instanciate an Rsync object
        """
        
        self.rsync_bin = '/usr/bin/rsync'
        #TODO This should come from config
        self.args = args
            
    def __unicode__(self):
        return self.remote_hostname
            
    def __str__(self):
        return unicode(self).encode('utf-8')
            
    def sync(self):
        """
        Setup and call rsync.
        """
        
        self.args.insert(0, self.rsync_bin)
        command_string = self.args

        try:
            proc = Popen(command_string,
                stdin=subprocess.PIPE,
                stdout=subprocess.PIPE,
                stderr=subprocess.PIPE,
                shell=False)
            out, err = proc.communicate()
            print out
            if err:
                raise RsyncError(err, proc.returncode)
            return int(proc.returncode)
        except OSError, err:
            sys.exit(err, 3)
            
    
class RsyncError(Exception):
    """
    Exception raised for errors generated by rsync.

    Attributes:
        err -- stdErr returned from rsync
        retcode -- return code of rsync
    """

    def __init__(self, err, retcode):
        self.retcode = retcode
        self.err = err
        print self.err, self.retcode
        #TODO logging here



